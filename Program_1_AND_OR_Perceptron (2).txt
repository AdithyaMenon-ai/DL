# Program 1: AND & OR Perceptron
import numpy as np

def perceptron(X, y, lr=0.1, epochs=10):
    w, b = np.zeros(X.shape[1]), 0
    for _ in range(epochs):
        for xi, target in zip(X, y):
            update = lr * (target - (np.dot(xi, w) + b >= 0))
            w += update * xi
            b += update
    return w, b

X = np.array([[0,0],[0,1],[1,0],[1,1]])
y_and = np.array([0, 0, 0, 1])
y_or = np.array([0, 1, 1, 1])

w_and, b_and = perceptron(X, y_and)
w_or, b_or = perceptron(X, y_or)

print("AND Gate Results:")
for xi in X:
    print(f"Input: {xi}, Predicted: {int(np.dot(xi, w_and) + b_and >= 0)}")

print("OR Gate Results:")
for xi in X:
    print(f"Input: {xi}, Predicted: {int(np.dot(xi, w_or) + b_or >= 0)}")

# OUTPUT
# AND Gate Results:
# Input: [0 0] Predicted: 0
# Input: [0 1] Predicted: 0
# Input: [1 0] Predicted: 0
# Input: [1 1] Predicted: 1
# OR Gate Results:
# Input: [0 0] Predicted: 0
# Input: [0 1] Predicted: 1
# Input: [1 0] Predicted: 1
# Input: [1 1] Predicted: 1
