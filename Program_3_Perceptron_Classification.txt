AIM: Train a perceptron to classify linearly separable data.

ALGORITHM:
1. Initialize weights and bias.
2. Update weights using perceptron rule.
3. Stop when classification error is minimal.
4. Test on new data.

PROGRAM:
import numpy as np

X = np.array([[1, 1], [4, 5], [0, 0], [5, 5]])
y = np.array([1, 0, 1, 0])
w, b = np.zeros(X.shape[1]), 0

for _ in range(10):
    for xi, yi in zip(X, y):
        update = 0.1 * (yi - (np.dot(xi, w) + b > 0))
        w += update * xi
        b += update

print("Test Data Predictions:", [(xi, int(np.dot(xi, w) + b > 0)) for xi in X])

OUTPUT:
Test Data Predictions: [([1, 1], 1), ([4, 5], 0), ([0, 0], 1), ([5, 5], 0)]